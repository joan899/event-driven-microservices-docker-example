name: CI Workflow (services/notification)

on:
  push:
    paths: 
      - 'services/notification/**/*'
    branches:
      - develop
      - master

  pull_request:
    paths: 
      - 'services/notification/**/*'
    branches:
      - develop
      - master

jobs:
  linter-and-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Run npm install
        run: cd services/notification && npm install

      - name: Run npm lint
        run: cd services/notification && npm run lint

      - name: Run npm tests
        run: cd services/notification && npm test

  docker-build-and-push:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and tag Docker image
        run: |
          cd services/notification && VERSION=$(jq -r .version < package.json)
          docker build -t ${{ secrets.DOCKER_USERNAME }}/notification:v$VERSION .

      - name: Push Docker image
        run: |
          cd services/notification && VERSION=$(jq -r .version < package.json)
          docker push ${{ secrets.DOCKER_USERNAME }}/notification:v$VERSION